mode: inference

data:
  inference_input:
    dir: ./data/unsupervise3D/TOMM20/holdout  #ADD-YOURS
    reader_params:
      dimension_order_out: "ZYX"
      C: 0
      T: 0
  inference_output:
    path: ./data/unsupervise3D/TOMM20/pred   #ADD-YOURS

  preprocess:
    - module_name: monai.transforms
      func_name: ScaleIntensityRangePercentiles       # Applying the same normalization as for IM in cyclegan_3d_train.yaml
      params:
        lower: 0.1
        upper: 99.9
        b_min: -1
        b_max: 1
    # - module_name: monai.transforms
    #   func_name: NormalizeIntensity                
  postprocess:
    - module_name: mmv_im2im.postprocessing.basic_collection
      func_name: extract_segmentation
      params:
        channel: 0
        cutoff: 0.00000001
    # - module_name: mmv_im2im.postprocessing.basic_collection
    #   func_name: generate_classmap

model:
  framework: cyclegan
  net:
    generator:
      module_name: aicsmlsegment.NetworkArchitecture.unet_xy_zoom_0pad_single  
      func_name: UNet3D
      params:
        in_channel: 1
        n_classes: 1
        down_ratio: 3
    discriminator:
      type: predefined_basic
      params:
        spatial_dims: 3
        in_channels: 1
        n_layers: 4
        nf: 64
        norm_layer: "INSTANCE"  
  checkpoint: ./lightning_logs/version_34/checkpoints/best.ckpt  #ADD-YOURS
  model_extra:
    inference_direction: "AtoB"   # IM => GT. For GT => IM set inference_direction: "BtoA"
    sliding_window_params:
      roi_size: [64, 192, 192]   # You may simply use the same value as in RandSpatialCropd in cyclegan_3d_train.yaml 
      sw_batch_size: 4
      overlap: 0.2
      mode: "gaussian"
trainer:
  params:
    gpus: 1
    precision: 16

mode: train

data:
  category: "pair"
  data_path: ./data/semantic2D/train
  dataloader:
    train:
      dataloader_params:
        batch_size: 8
        pin_memory: True
        num_workers: 16

  preprocess:
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["IM"]
        dimension_order_out: "SYX"
        C: 0
        T: 0
        Z: 0
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["GT"]
        dimension_order_out: "YX"
        T: 0
        Z: 0
        C: 0
    - module_name: mmv_im2im.preprocessing.transforms
      func_name: normalize_staining
      params:
        keys: ["IM"]
    - module_name: monai.transforms
      func_name: AddChanneld
      params:
        keys: ["GT"]
    - module_name: monai.transforms
      func_name: CastToTyped
      params:
        keys: ["GT"]
        dtype: int
    - module_name: monai.transforms
      func_name: CastToTyped
      params:
        keys: ["IM"]
        dtype: float32
    - module_name: monai.transforms
      func_name: SpatialPadd
      params:
        keys: ["IM", "GT"]
        spatial_size: [512, 512]
        mode: "reflect" 
    - module_name: monai.transforms
      func_name: RandSpatialCropd
      params:
        keys: ["IM", "GT"]
        random_size: False
        roi_size: [512, 512]
    - module_name: monai.transforms
      func_name: EnsureTyped
      params:
        keys: ["IM", "GT"]
  augmentation:
    - module_name: monai.transforms
      func_name: RandFlipd
      params:
        prob: 0.5
        keys: ["IM", "GT"]
    - module_name: monai.transforms
      func_name: RandHistogramShiftd
      params:
        prob: 0.1
        keys: ["IM"]
    - module_name: monai.transforms
      func_name: Rand2DElasticd
      params:
        prob: 0.5
        spacing: [32, 32]
        magnitude_range: [1, 5]
        rotate_range: [0, 0.5]
        scale_range: [0.1, 0.25]
        translate_range: [10, 50]
        padding_mode: "reflection"
        mode: "nearest"
        keys: ["IM", "GT"]

model:
  framework: FCN
  net:
    module_name: monai.networks.nets
    func_name: AttentionUnet
    params:
      spatial_dims: 2  
      in_channels: 3
      out_channels: 2
      channels: [32, 64, 128, 256, 512, 1024] #sequence of channels. Top block first. The length of channels should be no less than 2.
      strides: [2, 2, 2, 2, 2] 
    # module_name: mmv_im2im.models.nets.SA_2d
    # func_name: SuggestiveAnnotationModel
    # params:
    #   in_channels: 3
    #   out_channels: 2
    #   num_feature: 32
    # module_name: monai.networks.nets
    # func_name: SwinUNETR
    # params:
    #   spatial_dims: 2
    #   in_channels: 3
    #   out_channels: 2
    #   img_size: [512, 512]
    #   feature_size: 24
    #   num_heads: [3, 6, 12, 24, 24, 24]
    #   depths: [2, 2, 2, 2, 2, 2]
    #   norm_name: "batch"
    #   use_checkpoint: False
  criterion:
    # module_name: monai.losses
    # func_name: DiceCELoss
    # params:
    #   softmax: True
    #   to_onehot_y: True
    #   reduction: 'mean'
    module_name: monai.losses
    func_name: GeneralizedDiceFocalLoss
    params:
      softmax: True
      to_onehot_y: True
      focal_weight: [1.0, 1.0]
  optimizer:
    module_name: torch.optim
    func_name: AdamW
    params:
      lr: 0.001
      weight_decay: 0.0005
  scheduler:
    module_name: torch.optim.lr_scheduler
    func_name: ExponentialLR
    params:
      gamma: 0.98
trainer:
  verbose: True
  params:
    devices: 1
    precision: 16
    accelerator: "gpu"
    max_epochs: 5000
    detect_anomaly: True
  callbacks:
    - module_name: lightning.pytorch.callbacks.early_stopping
      func_name: EarlyStopping
      params:
        monitor: 'val_loss'
        patience: 500
    - module_name: lightning.pytorch.callbacks.model_checkpoint
      func_name: ModelCheckpoint
      params:
        monitor: 'val_loss'
        filename: '{epoch}-{val_loss:.5f}'
        save_top_k: 5
        save_last: True
        save_weights_only: True 
    - module_name: lightning.pytorch.callbacks.model_checkpoint
      func_name: ModelCheckpoint
      params:
        monitor: 'val_loss'
        filename: 'best'
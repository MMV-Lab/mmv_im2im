mode: train

data:
  category: "embedseg"
  data_path: /mnt/eternus/users/Jianxu/projects/im2im_experiments_v1/data/instance3D/train_fbl
  cache_path: /mnt/eternus/users/Jianxu/projects/im2im_experiments_v1/data/instance3D/cache_fbl
  extra:
    center_method: "centroid" # "medoid"
    patch_size: [32, 256, 256]
  dataloader:
    train_val_ratio: 0.05
    train:
      # partial_loader: 0.5
      dataloader_params:
        batch_size: 1
        pin_memory: True
        num_workers: 4 #4
        persistent_workers: True

  preprocess:
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["IM"]
        dtype: float
        dimension_order_out: "ZYX"
        C: 0
        T: 0
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["GT"]
        dtype: short
        dimension_order_out: "ZYX"
        C: 0
        T: 0
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["CL"]
        dtype: ubyte
        dimension_order_out: "ZYX"
        C: 0
        T: 0
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["CE"]
        dtype: bool
        dimension_order_out: "ZYX"
        C: 0
        T: 0
    - module_name: monai.transforms
      func_name: AddChanneld
      params:
        keys: ["IM", "GT", "CE", "CL"]
    - module_name: monai.transforms
      func_name: NormalizeIntensityd
      params:
        keys: ["IM"] 
    - module_name: monai.transforms
      func_name: EnsureTyped
      params:
        keys: ["IM", "GT", "CE", "CL"]
  augmentation:
    - module_name: monai.transforms
      func_name: RandFlipd
      params:
        prob: 0.5
        keys: ["IM", "GT", "CE", "CL"]
    # - module_name: monai.transforms
    #   func_name: RandHistogramShiftd
    #   params:
    #     prob: 0.2
    #     keys: ["IM"]
    #     num_control_points: [3,6]
   
model:
  framework: embedseg
  net:
    module_name: aicsmlsegment.NetworkArchitecture.unet_xy_zoom_0pad_single
    func_name: UNet3D
    params:
      in_channel: 1
      n_classes: 7
      down_ratio: 2
    # module_name: monai.networks.nets
    # func_name: DynUnet
    # params:
    #   spatial_dims: 3
    #   in_channels: 1
    #   out_channels: 7
    #   strides: [[1, 1, 1], [1, 2, 2], [1, 1, 1], [2, 2, 2]]
    #   kernel_size: [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
    #   upsample_kernel_size:  [[1, 2, 2], [1, 1, 1], [2, 2, 2]]
    #   filters: [64, 128, 128, 256]
    #   dropout: 0.0
    #   res_block: True
  criterion:
    module_name: mmv_im2im.utils.embedding_loss
    func_name: SpatialEmbLoss_3d
    params:
      grid_y: 1024
      grid_x: 1024
      grid_z: 128
      pixel_y: 1
      pixel_x: 1
      pixel_z: 1
      n_sigma: 3
      min_mask_sum: 64
      min_unclustered_sum: 1
      min_object_size: 3
      foreground_weight: 64
      use_costmap: False
  optimizer:
      module_name: torch.optim
      func_name: Adam  # AdamW
      params:
        lr: 0.00001
  scheduler:
      module_name: torch.optim.lr_scheduler
      func_name: ExponentialLR
      params:
        gamma: 0.99
trainer:
  verbose: True
  params:
    accelerator: "gpu"
    devices: 2
    precision: 16
    max_epochs: 300
    detect_anomaly: True
    gradient_clip_val: 0.8
    #reload_dataloaders_every_n_epochs: 10
  callbacks:
    - module_name: lightning.pytorch.callbacks.model_checkpoint
      func_name: ModelCheckpoint
      params:
        monitor: 'val_loss'
        filename: '{epoch}-{val_loss:.5f}'
        save_top_k: 2
        save_last: True
        save_weights_only: True 
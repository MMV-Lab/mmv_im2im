mode: train

data:
  category: "embedseg"
  data_path: "./data/instance2D/train"
  cache_path: "./data/instance2D/cache"
  extra:
    center_method: "medoid"
  dataloader:
    train:
      dataloader_params:
        batch_size: 16
        pin_memory: True
        num_workers: 8

  preprocess:
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["IM"]
        dtype: float32 # set as "float" if not using half-precision training
        dimension_order_out: "YX"
        C: 0
        T: 0
        Z: 0
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["GT"]
        dtype: short
        dimension_order_out: "YX"
        C: 0
        T: 0
        Z: 0
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["CL"]
        dtype: ubyte
        dimension_order_out: "YX"
        C: 0
        T: 0
        Z: 0
    - module_name: monai.transforms
      func_name: LoadImaged
      params:
        keys: ["CE"]
        dtype: bool
        dimension_order_out: "YX"
        C: 0
        T: 0
        Z: 0
    - module_name: monai.transforms
      func_name: AddChanneld
      params:
        keys: ["IM", "GT", "CE", "CL"]
    #- module_name: monai.transforms
    #  func_name: NormalizeIntensityd
    #  params:
    #    keys: ["IM"]
    #    subtrahend: 0
    #    divisor: 65535
    - module_name: monai.transforms
      func_name: ScaleIntensityRangePercentilesd
      params:
        keys: ["IM"]
        lower: 0.05
        upper: 99.95
        b_min: 0
        b_max: 1
    - module_name: monai.transforms
      func_name: EnsureTyped
      params:
        keys: ["IM", "GT", "CE", "CL"]
  augmentation:
    - module_name: monai.transforms
      func_name: RandFlipd
      params:
        prob: 0.5
        keys: ["IM", "GT", "CE", "CL"]
   
model:
  framework: embedseg
  net:
    module_name: mmv_im2im.models.nets.BranchedERFNet_2d
    func_name: BranchedERFNet_2d
    params:
      num_classes: [4, 1]
      input_channels: 1
  criterion:
    module_name: mmv_im2im.utils.embedding_loss
    func_name: SpatialEmbLoss_2d
    params:
      grid_y: 1280
      grid_x: 1280
      pixel_y: 1
      pixel_x: 1
      n_sigma: 2
      foreground_weight: 10
      use_costmap: False
  optimizer:
      module_name: torch.optim
      func_name: Adam  # AdamW
      params:
        lr: 0.0005
  scheduler:
      module_name: torch.optim.lr_scheduler
      func_name: ExponentialLR
      params:
        gamma: 0.99
trainer:
  verbose: True
  params:
    gpus: 1
    precision: 16
    max_epochs: 10000
    terminate_on_nan: True
    num_sanity_val_steps: 0
  callbacks:
    - module_name: pytorch_lightning.callbacks.early_stopping
      func_name: EarlyStopping
      params:
        monitor: 'val_loss'
        patience: 50
        verbose: True
    - module_name: pytorch_lightning.callbacks.model_checkpoint
      func_name: ModelCheckpoint
      params:
        monitor: 'val_loss'
        filename: '{epoch}-{train_loss:.5f}'
        save_top_k: 2
        save_last: True
        save_weights_only: True 
    - module_name: pytorch_lightning.callbacks.model_checkpoint
      func_name: ModelCheckpoint
      params:
        monitor: 'val_loss'
        filename: 'best'


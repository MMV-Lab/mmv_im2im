
# everything about data
data:
  category: "pair_3d"
  target_type: "Image" # "Label" or "Image
  # data_path: "/mnt/data/xyz.csv"
  data_path: "~/ambiomgroupdrive/Jianxu/data/labelfree_lamin/training_data"
  # data_path:
  #   source_path:
  #   target_path:
  #   costmap_path: optional
  #   image_type: "tiff"
  dataloader_patch_queue:  # where to use IO queue in
    sampler:
      name: UniformSampler
      func_name: RescaleIntensity
      params:
        patch_size: [64, 128, 128]
    params:
      num_workers: 4
      max_length: 360
      samples_per_volume: 4
  dataloader_params:
    train:
      batch_size: 4
      pin_memory: True
      num_workers: 0  # if dataload_path_queue is used, num_workers must be 0 here
    val:
      batch_size: 1
      num_workers: 1
  train_val_ratio: 0.1
  preprocess:
    - module_name: torchio
      func_name: RescaleIntensity
      params:
        out_min_max: [-1, 1]
    - module_name: torchio
      func_name: CropOrPad
      params:
        target_shape: [64, 512, 512]
  augmentation:
    - module_name: torchio
      func_name: RandomAffine
      params:
        p: 0.5
# model
model:
  category: FCN
  net:
    module_name: monai.networks.nets
    func_name: UNet
    params:
      spatial_dims: 3
      in_channels: 1
      out_channels: 1
      channels: [8, 16, 32, 64]
      strides: [2, 2, 2]
  criterion:
    module_name: torch.nn
    func_name: MSELoss
    params:
      reduction: 'mean'
  optimizer:
    module_name: torch.optim
    func_name: AdamW
    params:
      lr: 0.001
# training
training:
  params:
    gpus: 1
    precision: 16
    stochastic_weight_avg: True
  callbacks:
    - module_name: pytorch_lightning.callbacks.early_stopping
      func_name: EarlyStopping
      params:
        monitor: 'val_loss'
    